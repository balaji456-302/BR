/*
 * A device API for the Blue Robotics Ping Echosounder
 *
 *~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT EDIT
 *~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!
 *
 */

#pragma once

#include "ping-device.h"

class Ping360 : public PingDevice
{
public:
    /**
     *  @brief Constructor
     *
     *  @param ser: The device I/O
     */
    Ping360(PingPort& port) : PingDevice(port) {}

    /**
     * @brief Destructor
     */
    ~Ping360();

    /**
     *  @brief Establish communications with the device, and initialize the update interval
     *
     *  @param pingIntervalMs: The interval (in milliseconds) between acoustic measurements
     *
     *  @return true if the device was initialized successfully
     */
    bool initialize();

{% for msg in messages["control"] %}
    /**
     * @brief {{messages["control"][msg].description}}
     *
{% for field in messages["control"][msg].payload %}
     * @param {{field.name}} - {% if field.units %}Units: {{field.units}}; {% endif %}{{field.description}}
{% endfor %}
     */
    void set_{{msg}}({% for field in messages["control"][msg].payload %}{{generator.get_type_string(field.type)}} {{field.name}}{{ ", " if not loop.last else "" }}{% endfor %});

{% endfor %}

{% for msg in messages["get"]|sort %}
{% if not messages["get"][msg].deprecated %}
    //! {{messages["get"][msg].description}}
    struct {
{% for field in messages["get"][msg].payload %}
        // {{field.description}}
{% if not generator.is_vector(field.type) %}
        {{generator.get_type_string(field.type)}} {{field.name}};
{% else %}
        {{generator.get_type_string(field.vector.datatype)}}* {{field.name}} = nullptr;
        {{generator.get_type_string(field.vector.sizetype)}} {{field.name}}_length = 0;
{% endif %}
{% endfor %}
    } {{msg}}_data;

{% endif %}
{% endfor %}

private:
    /**
     *  @brief Handle an incoming message from the device. Internal values are updated according to the device data.
     *
     *  @param message: A pointer to the message received from the device
     */
    void _handleMessage(const ping_message* message) override;
};
